#include <iostream>
#include <cstring>
using namespace std;

int main () {
    int n;
    cin >> n;
    char arr[n][n];

    // Input the matrix
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> arr[i][j];
        }
    }

    char ch[100];
    cin >> ch;
    int len = strlen(ch);
    int a=0, b=0, c=0, d=0;

    // Left to right search
    for (int i = 0; i < n; i++) {
        for (int j = 0; j <= n - len; j++) { // Ensure enough space for the word
            bool match = true;
            a=i;
            b=j;
            for (int k = 0; k < len; k++) {
                if (arr[i][j + k] != ch[k]) {
                    match = false;
                    break;
                }
                c=i;
                d=j+k;
            }
            if (match) {
                cout << a << ", " << b <<" -> "<< c << ", " << d << endl;
                return 0;
            }
        }
    }

    // Top to bottom search
    for (int j = 0; j < n; j++) {
        for (int i = 0; i <= n - len; i++) { // Ensure enough space for the word
            bool match = true;
            a=i;
            b=j;
            for (int k = 0; k < len; k++) {
                if (arr[i + k][j] != ch[k]) {
                    match = false;
                    break;
                }
                c=i+k;
                d=j;
            }
            if (match) {
                cout << a << ", " << b <<" -> "<< c << ", " << d << endl;
                return 0;
            }
        }
    }

    // Right to left search
    for (int i = 0; i < n; i++) {
        for (int j = n - 1; j >= len - 1; j--) { // Ensure enough space for the word
            bool match = true;
            a=i;
            b=j;
            for (int k = 0; k < len; k++) {
                if (arr[i][j - k] != ch[k]) {
                    match = false;
                    break;
                }
                c=i;
                d=j-k;
            }
            if (match) {
                cout << a << ", " << b <<" -> "<< c << ", " << d << endl;
                return 0;
            }
        }
    }

    // Bottom to top search
    for (int j = 0; j < n; j++) {
        for (int i = n - 1; i >= len - 1; i--) { // Ensure enough space for the word
            bool match = true;
            a=i;
            b=j;
            for (int k = 0; k < len; k++) {
                if (arr[i - k][j] != ch[k]) {
                    match = false;
                    break;
                }
                c=i-k;
                d=j;
            }
            if (match) {
                cout << a << ", " << b <<" -> "<< c << ", " << d << endl;
                return 0;
            }
        }
    }

    // If no match is found
    cout << "Not Found" << endl;
    return 0;
}